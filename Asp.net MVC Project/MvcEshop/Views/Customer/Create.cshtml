@model MvcEshop.ViewModels.Customer.CreateViewModel

@{
    
    if (ViewBag.IsIntroduce==false)
    {
        ViewBag.Title = Resources.DisplayNames.Add + " " + Resources.DisplayNames.Customer; 
    }
    else
    {
        ViewBag.Title = Resources.DisplayNames.Introduce + " " + Resources.DisplayNames.Customer;
    }
    
    ViewBag.LayoutType = "DataEntryForm";
}

<div class="alert alert-success" style="font-weight:bold">
    در این صفحه، کنفرانس‌ها، نشریه‌ها، دانشگاه‌ها و سازمان‌های مختلف، خود را به عنوان یک گروه در سامانه معرفی نموده و پس از تایید مدیر سامانه، در لیست گروه‌های موجود در سامانه قرار می‌گیرند.
    پس از آن، گروه مورد نظر از دو امکان اساسی می‌تواند استفاده نماید.
    <br/>
    <br />
    1)	مدیر سامانه به روش‌های گوناگون که در منوی "راهنمای عضویت" در قسمت "کاربران گروهی" به تفصیل شرح داده شده است، می‌تواند برای گروه مورد نظر اعتبار ایجاد می‌نماید. پس از کسب اعتبار، مدیر گروه که رایانامه‌ی وی در هنگام معرفی  در فرم اطلاعاتی زیر در فیلد "رایانامه‌ی مدیر حساب اعتباری" وارد شده است، می‌تواند به عنوان مدیر گروه در زیرمجموعه‌ی خود کاربران مختلف را جهت استفاده از اعتبار گروه مدیریت نماید.
    <br />
    <br />
    2)	هر گروه کارتابلی دارد که کاربران مختلف چه آزاد و چه گروهی (شرح آن‌ها به تفصیل در منوی راهنمای عضویت آمده است) و حتی کاربران گروهی گروه‌های دیگر، می‌توانند گزارش همانندجویی اسناد مختلف را به کارتابل گروه مورد نظر ارسال نمایند. هر گروه تایید شده، دارای یک کارتابل است و برای دیدن گزارش‌های ارسال شده به کارتابل، نیازی به کسب اعتبار نمی‌باشد.
    بنابراین کنفرانس‌ها، نشریه‌ها و سازمان‌های مختلف می توانند از متقاضیان ارسال مقاله بخواهند که به صورت "کاربر آزاد" در سامانه "نام‌نویسی" نموده و پس از بارگذاری متن مقاله و پرداخت آنلاین، گزارش همانندجویی مدرک خود را به کارتابل آن کنفرانس، نشریه یا سازمان مورد نظر ارسال نمایند. در اینصورت آن کنفرانس، نشریه یا سازمان مورد نظر دیگر نیازی به کسب اعتبار ندارد.
    راه دیگر آن است که آن کنفرانس، نشریه یا سازمان مورد نظر که در سامانه به عنوان یک گروه شناخته می‌شود، به روش‌های شرح داده شده در منوی "راهنمای عضویت" قسمت "کاربران گروهی"، کسب اعتبار نماید و کارشناسان خود را به عنوان "کاربر گروهی" در زیرمجموعه‌ی گروه خود اضافه نموده تا این کارشناسان بتوانند مقاله‌های متقاضیان را در سامانه بارگذاری نموده و نتیجه‌ی همانندجویی آن را دریافت نمایند.


</div>    

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

        <div class="form-horizontal">
            
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerTypeId, new { @class = "control-label col-md-2" })
                <div class="inputControlWrapper">
                    @Html.DropDownList("CustomerTypeId", (SelectList)ViewBag.CustomerTypeIdList, Resources.DisplayNames.Select)
                    <div class="validationMessage">
                        @Html.ValidationMessageFor(model => model.CustomerTypeId)
                    </div>
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="inputControlWrapper">
                    @Html.EditorFor(model => model.Name)
                    <div class="validationMessage">
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="inputControlWrapper">
                    @Html.EditorFor(model => model.Email)
                    <div class="validationMessage">
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NotificationEmail, new { @class = "control-label col-md-2" })
                <div class="inputControlWrapper">
                    @Html.EditorFor(model => model.NotificationEmail)
                    <div class="validationMessage">
                        @Html.ValidationMessageFor(model => model.NotificationEmail)
                    </div>
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-2" })
                <div class="inputControlWrapper">
                    @Html.EditorFor(model => model.Phone)
                    <div class="validationMessage">
                        @Html.ValidationMessageFor(model => model.Phone)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactPerson, new { @class = "control-label col-md-2" })
                <div class="inputControlWrapper">
                    @Html.EditorFor(model => model.ContactPerson)
                    <div class="validationMessage">
                        @Html.ValidationMessageFor(model => model.ContactPerson)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountManagerEmail, new { @class = "control-label col-md-2" })
                <div class="inputControlWrapper">
                    @Html.EditorFor(model => model.AccountManagerEmail)
                    <div class="validationMessage">
                        @Html.ValidationMessageFor(model => model.AccountManagerEmail)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsedToAllocatedVolumePercentageToNotify, new { @class = "control-label col-md-2" })
                <div class="inputControlWrapper">
                    @Html.TextBoxFor(model => model.UsedToAllocatedVolumePercentageToNotify)
                    <div class="validationMessage">
                        @Html.ValidationMessageFor(model => model.UsedToAllocatedVolumePercentageToNotify)
                    </div>
                </div>
            </div>


            <div class="form-group" id="buttons">
                <div class="FormButtonControlWrapper">
                    <input type="submit" value="ایجاد" class="submit" />
                    @if (ViewBag.IsIntroduce==false)
                    {
                        @Html.ActionLink("بازگشت به فهرست", "Index")
                    }
                </div>
            </div>
        </div>
}

