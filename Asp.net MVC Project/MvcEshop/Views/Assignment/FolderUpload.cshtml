@model MvcEshop.ViewModels.Assignment.FolderUploadViewModel

@{

    ViewBag.Title = Resources.DisplayNames.FolderUpload;
    ViewBag.LayoutType = "DataEntryForm";

    System.Web.HttpContext.Current.Session["ListOfFinalChosenFiles"] = new List<MvcEshop.Models.FileNameFileNamesInServer>();

    System.Web.HttpContext.Current.Session["CurrentSiteMap"] = string.Empty;
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        <div class="validationMessage">
            @Html.ValidationSummary(true)
        </div>




        <div class="form-group">
            @Html.Label(Resources.DisplayNames.File + Resources.DisplayNames.Plural, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="inputControlWrapper container">
                <div class="col-md-6">
                    <div class="demo-section k-content k-rtl" >
                        @(Html.Kendo().Upload()
                                .Name("files")
                                .HtmlAttributes(new { @accept = ".doc,.docx" })
                                .Async(a => a
                                .Save("Save", "Upload")
                                .Remove("Remove", "Upload")
                                .AutoUpload(true)

        )
                        )
                        <div class="validationMessage">
                            @Html.ValidationMessage("Files")
                        </div>
                    </div>
                </div>

                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountId, new { @class = "control-label col-md-2" })
            <div class="inputControlWrapper">
                @Html.DropDownList("AccountId", Resources.DisplayNames.Select)
                <div class="validationMessage">
                    @Html.ValidationMessageFor(model => model.AccountId)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3">
                @Html.EditorFor(model => model.MustSearchInIrandoc)
                @Html.LabelFor(model => model.MustSearchInIrandoc)
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-md-offset-3">
                @Html.EditorFor(model => model.MustSearchInInternet)
                @Html.LabelFor(model => model.MustSearchInInternet)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3">
                <div class="validationMessage">
                    @Html.ValidationMessage("ChooseAtLeastOneItem")
                </div>
            </div>
        </div>


        <div class="form-group" id="buttons">
            <div class="FormButtonControlWrapper">
                <input type="submit" id="btnSubmit" value=@Resources.DisplayNames.Send class="submit" />
            </div>
        </div>
    </div>
}



