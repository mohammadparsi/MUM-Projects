// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MvcEshop.Controllers
{
    public partial class AssignmentController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AssignmentController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AssignmentController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Edit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteConfirmed()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteConfirmed);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UploadFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetPaymentResult()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPaymentResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PaymentConfirmation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PaymentConfirmation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReceivedReports()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReceivedReports);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Inbox()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Inbox);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PreviousRequests()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PreviousRequests);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ShowResult()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowResult);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AssignmentController Actions { get { return MVC.Assignment; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Assignment";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Assignment";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Create = "Create";
            public readonly string Edit = "Edit";
            public readonly string Delete = "Delete";
            public readonly string DeleteConfirmed = "Delete";
            public readonly string UploadFile = "UploadFile";
            public readonly string SendDocument = "SendDocument";
            public readonly string FolderUpload = "FolderUpload";
            public readonly string GetPaymentResult = "GetPaymentResult";
            public readonly string PaymentConfirmation = "PaymentConfirmation";
            public readonly string ReceivedReports = "ReceivedReports";
            public readonly string Inbox = "Inbox";
            public readonly string PreviousRequests = "PreviousRequests";
            public readonly string ShowResult = "ShowResult";
            public readonly string GetNextPage = "GetNextPage";
            public readonly string GetPreviousPage = "GetPreviousPage";
            public readonly string GetFirstPage = "GetFirstPage";
            public readonly string GetLastPage = "GetLastPage";
            public readonly string CheckPlagiarism = "CheckPlagiarism";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Create = "Create";
            public const string Edit = "Edit";
            public const string Delete = "Delete";
            public const string DeleteConfirmed = "Delete";
            public const string UploadFile = "UploadFile";
            public const string SendDocument = "SendDocument";
            public const string FolderUpload = "FolderUpload";
            public const string GetPaymentResult = "GetPaymentResult";
            public const string PaymentConfirmation = "PaymentConfirmation";
            public const string ReceivedReports = "ReceivedReports";
            public const string Inbox = "Inbox";
            public const string PreviousRequests = "PreviousRequests";
            public const string ShowResult = "ShowResult";
            public const string GetNextPage = "GetNextPage";
            public const string GetPreviousPage = "GetPreviousPage";
            public const string GetFirstPage = "GetFirstPage";
            public const string GetLastPage = "GetLastPage";
            public const string CheckPlagiarism = "CheckPlagiarism";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Create s_params_Create = new ActionParamsClass_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Create CreateParams { get { return s_params_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Create
        {
            public readonly string createViewModel = "createViewModel";
        }
        static readonly ActionParamsClass_Edit s_params_Edit = new ActionParamsClass_Edit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Edit EditParams { get { return s_params_Edit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Edit
        {
            public readonly string id = "id";
            public readonly string editViewModel = "editViewModel";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_DeleteConfirmed s_params_DeleteConfirmed = new ActionParamsClass_DeleteConfirmed();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteConfirmed DeleteConfirmedParams { get { return s_params_DeleteConfirmed; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteConfirmed
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_UploadFile s_params_UploadFile = new ActionParamsClass_UploadFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadFile UploadFileParams { get { return s_params_UploadFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadFile
        {
            public readonly string id = "id";
            public readonly string uploadFileViewModel = "uploadFileViewModel";
        }
        static readonly ActionParamsClass_FolderUpload s_params_FolderUpload = new ActionParamsClass_FolderUpload();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FolderUpload FolderUploadParams { get { return s_params_FolderUpload; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FolderUpload
        {
            public readonly string folderUploadViewModel = "folderUploadViewModel";
        }
        static readonly ActionParamsClass_GetPaymentResult s_params_GetPaymentResult = new ActionParamsClass_GetPaymentResult();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPaymentResult GetPaymentResultParams { get { return s_params_GetPaymentResult; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPaymentResult
        {
            public readonly string SysId = "SysId";
            public readonly string Username = "Username";
            public readonly string Email = "Email";
            public readonly string Amount = "Amount";
            public readonly string Fp = "Fp";
            public readonly string TimeStamp = "TimeStamp";
            public readonly string SourceBillId = "SourceBillId";
            public readonly string BillId = "BillId";
            public readonly string FactorNum = "FactorNum";
            public readonly string FinalStatus = "FinalStatus";
        }
        static readonly ActionParamsClass_PaymentConfirmation s_params_PaymentConfirmation = new ActionParamsClass_PaymentConfirmation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PaymentConfirmation PaymentConfirmationParams { get { return s_params_PaymentConfirmation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PaymentConfirmation
        {
            public readonly string mustSearchInIrandoc = "mustSearchInIrandoc";
            public readonly string mustSearchInInternet = "mustSearchInInternet";
            public readonly string fileId = "fileId";
        }
        static readonly ActionParamsClass_ReceivedReports s_params_ReceivedReports = new ActionParamsClass_ReceivedReports();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReceivedReports ReceivedReportsParams { get { return s_params_ReceivedReports; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReceivedReports
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Inbox s_params_Inbox = new ActionParamsClass_Inbox();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Inbox InboxParams { get { return s_params_Inbox; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Inbox
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_PreviousRequests s_params_PreviousRequests = new ActionParamsClass_PreviousRequests();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PreviousRequests PreviousRequestsParams { get { return s_params_PreviousRequests; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PreviousRequests
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ShowResult s_params_ShowResult = new ActionParamsClass_ShowResult();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ShowResult ShowResultParams { get { return s_params_ShowResult; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ShowResult
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CheckPlagiarism s_params_CheckPlagiarism = new ActionParamsClass_CheckPlagiarism();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckPlagiarism CheckPlagiarismParams { get { return s_params_CheckPlagiarism; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckPlagiarism
        {
            public readonly string showResultForEveryOneViewModel = "showResultForEveryOneViewModel";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string CheckPlagiarism = "CheckPlagiarism";
                public readonly string Create = "Create";
                public readonly string Delete = "Delete";
                public readonly string Edit = "Edit";
                public readonly string FolderUpload = "FolderUpload";
                public readonly string Inbox = "Inbox";
                public readonly string Index = "Index";
                public readonly string PaymentConfirmation = "PaymentConfirmation";
                public readonly string ReceivedReports = "ReceivedReports";
                public readonly string ShowResult = "ShowResult";
                public readonly string UploadFile = "UploadFile";
            }
            public readonly string CheckPlagiarism = "~/Views/Assignment/CheckPlagiarism.cshtml";
            public readonly string Create = "~/Views/Assignment/Create.cshtml";
            public readonly string Delete = "~/Views/Assignment/Delete.cshtml";
            public readonly string Edit = "~/Views/Assignment/Edit.cshtml";
            public readonly string FolderUpload = "~/Views/Assignment/FolderUpload.cshtml";
            public readonly string Inbox = "~/Views/Assignment/Inbox.cshtml";
            public readonly string Index = "~/Views/Assignment/Index.cshtml";
            public readonly string PaymentConfirmation = "~/Views/Assignment/PaymentConfirmation.cshtml";
            public readonly string ReceivedReports = "~/Views/Assignment/ReceivedReports.cshtml";
            public readonly string ShowResult = "~/Views/Assignment/ShowResult.cshtml";
            public readonly string UploadFile = "~/Views/Assignment/UploadFile.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AssignmentController : MvcEshop.Controllers.AssignmentController
    {
        public T4MVC_AssignmentController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(System.Guid? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            IndexOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Create()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            CreateOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MvcEshop.ViewModels.Assignment.CreateViewModel createViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult Create(MvcEshop.ViewModels.Assignment.CreateViewModel createViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "createViewModel", createViewModel);
            CreateOverride(callInfo, createViewModel);
            return callInfo;
        }

        [NonAction]
        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Edit(System.Guid? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MvcEshop.ViewModels.Assignment.CreateViewModel editViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult Edit(MvcEshop.ViewModels.Assignment.CreateViewModel editViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "editViewModel", editViewModel);
            EditOverride(callInfo, editViewModel);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(System.Guid? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DeleteConfirmedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteConfirmed(System.Guid id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteConfirmed);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteConfirmedOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void UploadFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult UploadFile(System.Guid? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            UploadFileOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SendDocumentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendDocument()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendDocument);
            SendDocumentOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UploadFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MvcEshop.ViewModels.Assignment.UploadFileViewModel uploadFileViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult UploadFile(MvcEshop.ViewModels.Assignment.UploadFileViewModel uploadFileViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uploadFileViewModel", uploadFileViewModel);
            UploadFileOverride(callInfo, uploadFileViewModel);
            return callInfo;
        }

        [NonAction]
        partial void FolderUploadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult FolderUpload()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FolderUpload);
            FolderUploadOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void FolderUploadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MvcEshop.ViewModels.Assignment.FolderUploadViewModel folderUploadViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult FolderUpload(MvcEshop.ViewModels.Assignment.FolderUploadViewModel folderUploadViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FolderUpload);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "folderUploadViewModel", folderUploadViewModel);
            FolderUploadOverride(callInfo, folderUploadViewModel);
            return callInfo;
        }

        [NonAction]
        partial void GetPaymentResultOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string SysId, string Username, string Email, string Amount, string Fp, string TimeStamp, string SourceBillId, string BillId, string FactorNum, string FinalStatus);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPaymentResult(string SysId, string Username, string Email, string Amount, string Fp, string TimeStamp, string SourceBillId, string BillId, string FactorNum, string FinalStatus)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPaymentResult);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SysId", SysId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Username", Username);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Email", Email);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Amount", Amount);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Fp", Fp);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "TimeStamp", TimeStamp);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SourceBillId", SourceBillId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "BillId", BillId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FactorNum", FactorNum);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "FinalStatus", FinalStatus);
            GetPaymentResultOverride(callInfo, SysId, Username, Email, Amount, Fp, TimeStamp, SourceBillId, BillId, FactorNum, FinalStatus);
            return callInfo;
        }

        [NonAction]
        partial void PaymentConfirmationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool? mustSearchInIrandoc, bool? mustSearchInInternet, string fileId);

        [NonAction]
        public override System.Web.Mvc.ActionResult PaymentConfirmation(bool? mustSearchInIrandoc, bool? mustSearchInInternet, string fileId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PaymentConfirmation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mustSearchInIrandoc", mustSearchInIrandoc);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mustSearchInInternet", mustSearchInInternet);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileId", fileId);
            PaymentConfirmationOverride(callInfo, mustSearchInIrandoc, mustSearchInInternet, fileId);
            return callInfo;
        }

        [NonAction]
        partial void ReceivedReportsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReceivedReports(System.Guid? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReceivedReports);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ReceivedReportsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void InboxOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Inbox(System.Guid? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Inbox);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            InboxOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void PreviousRequestsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult PreviousRequests(System.Guid? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PreviousRequests);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PreviousRequestsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ShowResultOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ShowResult(System.Guid? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowResult);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ShowResultOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void GetNextPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNextPage()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNextPage);
            GetNextPageOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetPreviousPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPreviousPage()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPreviousPage);
            GetPreviousPageOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetFirstPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetFirstPage()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFirstPage);
            GetFirstPageOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetLastPageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetLastPage()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetLastPage);
            GetLastPageOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CheckPlagiarismOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckPlagiarism()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckPlagiarism);
            CheckPlagiarismOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CheckPlagiarismOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MvcEshop.ViewModels.Home.ShowResultForEveryOneViewModel showResultForEveryOneViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckPlagiarism(MvcEshop.ViewModels.Home.ShowResultForEveryOneViewModel showResultForEveryOneViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckPlagiarism);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "showResultForEveryOneViewModel", showResultForEveryOneViewModel);
            CheckPlagiarismOverride(callInfo, showResultForEveryOneViewModel);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
