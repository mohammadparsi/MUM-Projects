@using Infrastructure

@model IEnumerable<ViewModels.Areas.Administrator.ProjectArea.IndexViewModel>

@{
	string strTitle =
		string.Format("{0} {1}",
		Resources.Actions.List,
		Models.Resources.ProjectArea.EntitiesName);

	ViewBag.Title = strTitle;
}

<div class="panel panel-primary">
	<div class="panel-heading">
		@strTitle
	</div>
	<div class="panel-body">
		@{
			string strCreate =
				string.Format("{0} {1}",
				Resources.Actions.Create,
				Models.Resources.ProjectArea.EntityName);
		}

		@if (Infrastructure.Sessions.AuthenticatedUser.Role == Models.Enums.Roles.Programmer)
		{
			@Html.ActionLink(strCreate, MVC.Administrator.ProjectArea.Create(),
			new Dictionary<string, object> { { "class", Infrastructure.HtmlHelpers.ActionLinkClassValue } })
			<br />
			<br />
		}

		<div class="table-responsive">
			<table class="table table-striped table-bordered table-hover table-condensed">
				<tr>
					<th style="width: 120px;">
						&nbsp;
					</th>
					<th style="width: 80px;">
						@Html.DisplayNameFor(model => model.IsActive)
					</th>
					<th style="width: 80px;">
						@Html.DisplayNameFor(model => model.Ordering)
					</th>

					@if (Infrastructure.Sessions.AuthenticatedUser.Role == Models.Enums.Roles.Programmer)
					{
						<th style="width: 150px;">
							@Html.DisplayNameFor(model => model.IsVisibleJustForProgrammer)
						</th>
						<th style="width: 150px;">
							@Html.DisplayNameFor(model => model.Name)
						</th>
					}

					<th>
						@Html.DisplayNameFor(model => model.DisplayName)
					</th>
					<th style="width: 80px;">
						@Models.Resources.ProjectArea.ProjectControllerCount
					</th>
					<th style="width: 160px;">
						@Models.Resources.BaseEntity.InsertAndUpdateDateTime
					</th>
				</tr>

				@foreach (var item in Model)
				{
					string strRowStyle =
						Infrastructure.Utility.GetRowStyle(item);

					<tr class="@strRowStyle">
						<td>
							@Html.ActionLink(Resources.Actions.Edit,
							MVC.Administrator.ProjectArea.Edit(item.Id))
							<br />
							@Html.ActionLink(Resources.Actions.Details,
							MVC.Administrator.ProjectArea.Details(item.Id))

							@if ((item.ProjectControllerCount == 0) &&
								(Infrastructure.Sessions.AuthenticatedUser.Role == Models.Enums.Roles.Programmer))
							{
								<br />
								@Html.ActionLink(Resources.Actions.Delete,
								MVC.Administrator.ProjectArea.Delete(item.Id))
							}

							<br />
							<br />
							@Html.ActionLink(Resources.Actions.ListOf + " " +
							Models.Resources.ProjectController.EntitiesName,
							MVC.Administrator.ProjectController.Index(item.Id))
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.IsActive)
						</td>
						<td>
							@Dtx.Text.Convert.DisplayFormattedNumber(item.Ordering)
						</td>

						@if (Infrastructure.Sessions.AuthenticatedUser.Role == Models.Enums.Roles.Programmer)
						{
							<td>
								@Html.DisplayFor(modelItem => item.IsVisibleJustForProgrammer)
							</td>
							<td style="direction: ltr">
								@Html.DisplayFor(modelItem => item.Name)
							</td>
						}

						<td>
							@Html.DisplayFor(modelItem => item.DisplayName)
						</td>
						<td>
							@Dtx.Text.Convert.DisplayFormattedNumber(item.ProjectControllerCount)
						</td>
						<td>
							@Html.DisplayDateTime(item.InsertDateTime, displayTime: true)
							<br />
							@Html.DisplayDateTime(item.UpdateDateTime, displayTime: true)
						</td>
					</tr>
				}
			</table>
		</div>
	</div>
</div>
