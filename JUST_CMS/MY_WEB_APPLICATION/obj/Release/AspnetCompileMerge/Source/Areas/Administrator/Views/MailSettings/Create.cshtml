@using Infrastructure

@model Models.MailSettings

@section headSection
{
	@Html.Partial(MVC.Shared.Views._Partial_TinyMce)
}

@{
	string strTitle =
		string.Format("{0} {1}",
		Resources.Actions.Create,
		Models.Resources.MailSettings.EntityName);

	ViewBag.Title = strTitle;
}

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="panel panel-primary">
		<div class="panel-heading">
			@strTitle
		</div>
		<div class="panel-body">
			<div class="form-horizontal">
				@Html.ValidationSummary(excludePropertyErrors: true)

				<div class="form-group">
					@Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.CheckBoxFor(model => model.IsActive, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.IsActive)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Ordering, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.Ordering, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Ordering)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Name, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Name)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.SenderDisplayName, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.SenderDisplayName, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.SenderDisplayName)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.SenderEmailAddress, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.SenderEmailAddress, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.SenderEmailAddress)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.SenderEmailPassword, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.SenderEmailPassword, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.SenderEmailPassword)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.SupportDisplayName, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.SupportDisplayName, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.SupportDisplayName)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.SupportEmailAddress, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.SupportEmailAddress, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.SupportEmailAddress)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.EmailSubjectTemplate, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.EmailSubjectTemplate, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.EmailSubjectTemplate)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.SmtpClientPortNumber, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.SmtpClientPortNumber, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.SmtpClientPortNumber)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.SmtpClientTimeout, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.SmtpClientTimeout, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.SmtpClientTimeout)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.SmtpClientEnableSsl, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.CheckBoxFor(model => model.SmtpClientEnableSsl, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.SmtpClientEnableSsl)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.SmtpClientHostAddress, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.SmtpClientHostAddress, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.SmtpClientHostAddress)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.BccAddresses, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextBoxFor(model => model.BccAddresses, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.BccAddresses)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Description, new { @class = "control-label col-md-4" })
					<div class="col-md-8">
						@Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Description)
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-8 col-md-offset-2">
						@Html.Submit(Resources.Buttons.Create)
						@Html.Reset(Resources.Buttons.Reset)
					</div>
				</div>
			</div>
		</div>
		<div class="panel-footer">
			@Html.ActionLink(Resources.Actions.BackToList,
				MVC.Administrator.MailSettings.Index(),
				new Dictionary<string, object> { { "class", Infrastructure.HtmlHelpers.ActionLinkClassValue } })
		</div>
	</div>
}
