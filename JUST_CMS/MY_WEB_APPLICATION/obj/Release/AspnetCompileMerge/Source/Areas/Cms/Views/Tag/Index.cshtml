@using Infrastructure

@model IEnumerable<ViewModels.Areas.Cms.Tag.IndexViewModel>

@{
	string strTitle =
		string.Format("{0} {1}",
		Resources.Actions.List,
		Models.Resources.Cms.Tag.EntitiesName);

	ViewBag.Title = strTitle;
}

<div class="panel panel-primary">
	<div class="panel-heading">
		@strTitle
	</div>
	<div class="panel-body">
		@{
			string strCreate =
				string.Format("{0} {1}",
				Resources.Actions.Create,
				Models.Resources.Cms.Tag.EntityName);
		}

		@Html.ActionLink(strCreate, MVC.Cms.Tag.Create(),
			new Dictionary<string, object> { { "class", Infrastructure.HtmlHelpers.ActionLinkClassValue } })
		<br />
		<br />

		<div class="table-responsive">
			<table class="table table-striped table-bordered table-hover table-condensed">
				<tr>
					<th style="width: 100px;">
						&nbsp;
					</th>
					<th style="width: 100px;">
						@Html.DisplayNameFor(model => model.IsActive)
					</th>
					<th style="width: 100px;">
						@Html.DisplayNameFor(model => model.IsVerified)
					</th>
					<th style="width: 100px;">
						@Html.DisplayNameFor(model => model.Ordering)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Name)
					</th>
					<th style="width: 100px;">
						@Html.DisplayNameFor(model => model.PageCount)
					</th>
					<th style="width: 100px;">
						@Html.DisplayNameFor(model => model.PostCount)
					</th>
					<th style="width: 160px;">
						@Html.DisplayNameFor(model => model.UpdateDateTime)
					</th>
				</tr>

				@foreach (var item in Model)
				{
					string strRowStyle =
						Infrastructure.Utility.GetRowStyle(item);

					<tr class="@strRowStyle">
						<td>
							@Html.ActionLink(Resources.Actions.Edit,
								MVC.Cms.Tag.Edit(item.Id))
							<br />
							@Html.ActionLink(Resources.Actions.Details,
								MVC.Cms.Tag.Details(item.Id))
							<br />
							@Html.ActionLink(Resources.Actions.Delete,
								MVC.Cms.Tag.Delete(item.Id))
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.IsActive)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.IsVerified)
						</td>
						<td>
							@Dtx.Text.Convert.DisplayFormattedNumber(item.Ordering)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Name)
						</td>
						<td>
							@Dtx.Text.Convert.DisplayFormattedNumber(item.PageCount)
						</td>
						<td>
							@Dtx.Text.Convert.DisplayFormattedNumber(item.PostCount)
						</td>
						<td>
							@Html.DisplayDateTime(item.UpdateDateTime, displayTime: true)
						</td>
					</tr>
				}
			</table>
		</div>
	</div>
</div>
