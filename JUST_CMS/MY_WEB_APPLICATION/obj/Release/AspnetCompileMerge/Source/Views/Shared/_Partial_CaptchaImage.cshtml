@model CaptchaMvc.Models.DefaultBuildInfoModel

<img id="@Model.ImageElementId" src="@Model.ImageUrl" />
@Html.Hidden(Model.TokenElementId, Model.TokenValue)
<br />
@{
	string id = Guid.NewGuid().ToString("N");
	string functionName = string.Format("______{0}________()", Guid.NewGuid().ToString("N"));
	<script type="text/javascript">

		$(function () {
			$('#@id').show();
		});

		function @functionName {
		$('#@id').hide();
			$.post("@Model.RefreshUrl", { @Model.TokenParameterName: $('#@Model.TokenElementId').val() },
			function () {
				$('#@id').show();
			});
			return false;
		}
	</script>

	<a href="#@Model.InputElementId" id="@id" onclick="@functionName" style="display: none;">
		@Resources.CaptchaImage.Refresh
	</a>
	<br />
}

<br />

@Html.TextBox(Model.InputElementId, null, new Dictionary<string, object>
{
	{"data-val", "true"},
	{"class", "form-control"},
	{"data-val-required", Resources.CaptchaImage.ErrorMessage02}
})

@*@Html.TextBox(Model.InputElementId, null, new Dictionary<string, object>
{
	{"data-val", "true"},
	{"class", "form-control"},
	{"data-val-required", Model.RequiredMessage}
})*@

@*@if (Model.IsRequired)
{
	@Html.TextBox(Model.InputElementId, null, new Dictionary<string, object>
{
{"data-val", "true"},
{"data-val-required", Model.RequiredMessage}
})
}
else
{
	@Html.TextBox(Model.InputElementId)
}*@

@Html.ValidationMessage(Model.InputElementId)
