//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SmartStringResources;


namespace Models.Resources.Strings {
    
    
    /// <summary>
    ///   Provides access to string resources.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("SmartStringResources", "1.2.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class BaseEntity {
        
        /// <summary>
        ///   Looks up a localized string similar to: Activator
        /// </summary>
        public static string ActivatorUserId([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.ActivatorUserId;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("ActivatorUserId", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Active Time
        /// </summary>
        public static string ActiveDateTime([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.ActiveDateTime;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("ActiveDateTime", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Creator
        /// </summary>
        public static string CreatorUserId([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.CreatorUserId;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("CreatorUserId", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Delete Time
        /// </summary>
        public static string DeleteDateTime([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.DeleteDateTime;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("DeleteDateTime", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Editor
        /// </summary>
        public static string EditorUserId([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.EditorUserId;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("EditorUserId", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Id
        /// </summary>
        public static string Id([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.Id;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("Id", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Insert and Update Time
        /// </summary>
        public static string InsertAndUpdateDateTime([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.InsertAndUpdateDateTime;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("InsertAndUpdateDateTime", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Insert Time
        /// </summary>
        public static string InsertDateTime([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.InsertDateTime;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("InsertDateTime", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Active
        /// </summary>
        public static string IsActive([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.IsActive;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("IsActive", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Deleted
        /// </summary>
        public static string IsDeleted([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.IsDeleted;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("IsDeleted", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: System
        /// </summary>
        public static string IsSystem([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.IsSystem;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("IsSystem", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Verified
        /// </summary>
        public static string IsVerified([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.IsVerified;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("IsVerified", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Master Data Id
        /// </summary>
        public static string MasterDataCode([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.MasterDataCode;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("MasterDataCode", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Ordering
        /// </summary>
        public static string Ordering([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.Ordering;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("Ordering", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Remover
        /// </summary>
        public static string RemoverUserId([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.RemoverUserId;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("RemoverUserId", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Sync Time
        /// </summary>
        public static string SyncDateTime([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.SyncDateTime;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("SyncDateTime", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Update Time
        /// </summary>
        public static string UpdateDateTime([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.UpdateDateTime;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("UpdateDateTime", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Verifier
        /// </summary>
        public static string VerifierUserId([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.VerifierUserId;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("VerifierUserId", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Verify Time
        /// </summary>
        public static string VerifyDateTime([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.BaseEntity.VerifyDateTime;
            }
            return global::Models.Resources.BaseEntity.ResourceManager.GetString("VerifyDateTime", resourceCulture);
        }
    }
}
namespace Models.Resources.Strings {
    
    
    /// <summary>
    ///   Provides access to string resource keys.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("SmartStringResources", "1.2.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class BaseEntityKeys {
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Activator
        /// </summary>
        public const string ActivatorUserId = "ActivatorUserId";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Active Time
        /// </summary>
        public const string ActiveDateTime = "ActiveDateTime";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Creator
        /// </summary>
        public const string CreatorUserId = "CreatorUserId";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Delete Time
        /// </summary>
        public const string DeleteDateTime = "DeleteDateTime";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Editor
        /// </summary>
        public const string EditorUserId = "EditorUserId";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Id
        /// </summary>
        public const string Id = "Id";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Insert and Update Time
        /// </summary>
        public const string InsertAndUpdateDateTime = "InsertAndUpdateDateTime";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Insert Time
        /// </summary>
        public const string InsertDateTime = "InsertDateTime";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Active
        /// </summary>
        public const string IsActive = "IsActive";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Deleted
        /// </summary>
        public const string IsDeleted = "IsDeleted";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: System
        /// </summary>
        public const string IsSystem = "IsSystem";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Verified
        /// </summary>
        public const string IsVerified = "IsVerified";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Master Data Id
        /// </summary>
        public const string MasterDataCode = "MasterDataCode";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Ordering
        /// </summary>
        public const string Ordering = "Ordering";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Remover
        /// </summary>
        public const string RemoverUserId = "RemoverUserId";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Sync Time
        /// </summary>
        public const string SyncDateTime = "SyncDateTime";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Update Time
        /// </summary>
        public const string UpdateDateTime = "UpdateDateTime";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Verifier
        /// </summary>
        public const string VerifierUserId = "VerifierUserId";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Verify Time
        /// </summary>
        public const string VerifyDateTime = "VerifyDateTime";
    }
}
