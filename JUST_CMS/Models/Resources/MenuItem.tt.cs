//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SmartStringResources;


namespace Models.Resources.Strings {
    
    
    /// <summary>
    ///   Provides access to string resources.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("SmartStringResources", "1.1.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MenuItem {
        
        /// <summary>
        ///   Looks up a localized string similar to: Description
        /// </summary>
        public static string Description([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.Description;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("Description", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Menu Items
        /// </summary>
        public static string EntitiesName([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.EntitiesName;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("EntitiesName", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Menu Items of
        /// </summary>
        public static string EntitiesNameOf([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.EntitiesNameOf;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("EntitiesNameOf", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Menu Item
        /// </summary>
        public static string EntityName([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.EntityName;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("EntityName", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Menu Item of
        /// </summary>
        public static string EntityNameOf([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.EntityNameOf;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("EntityNameOf", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Image Url
        /// </summary>
        public static string ImageUrl([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.ImageUrl;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("ImageUrl", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Navigate Url
        /// </summary>
        public static string NavigateUrl([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.NavigateUrl;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("NavigateUrl", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Open in New Tab or Window
        /// </summary>
        public static string OpenInNewTabOrWindow([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.OpenInNewTabOrWindow;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("OpenInNewTabOrWindow", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Parent Menu Item
        /// </summary>
        public static string ParentMenuItem([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.ParentMenuItem;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("ParentMenuItem", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Popout Image Url
        /// </summary>
        public static string PopoutImageUrl([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.PopoutImageUrl;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("PopoutImageUrl", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Selectable
        /// </summary>
        public static string Selectable([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.Selectable;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("Selectable", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Text
        /// </summary>
        public static string Text([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.Text;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("Text", resourceCulture);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to: Tool Tip
        /// </summary>
        public static string ToolTip([System.Runtime.InteropServices.OptionalAttribute()] System.Globalization.CultureInfo resourceCulture) {
            if (object.ReferenceEquals(resourceCulture, null)) {
                return global::Models.Resources.MenuItem.ToolTip;
            }
            return global::Models.Resources.MenuItem.ResourceManager.GetString("ToolTip", resourceCulture);
        }
    }
}
namespace Models.Resources.Strings {
    
    
    /// <summary>
    ///   Provides access to string resource keys.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("SmartStringResources", "1.1.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MenuItemKeys {
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Description
        /// </summary>
        public const string Description = "Description";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Menu Items
        /// </summary>
        public const string EntitiesName = "EntitiesName";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Menu Items of
        /// </summary>
        public const string EntitiesNameOf = "EntitiesNameOf";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Menu Item
        /// </summary>
        public const string EntityName = "EntityName";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Menu Item of
        /// </summary>
        public const string EntityNameOf = "EntityNameOf";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Image Url
        /// </summary>
        public const string ImageUrl = "ImageUrl";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Navigate Url
        /// </summary>
        public const string NavigateUrl = "NavigateUrl";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Open in New Tab or Window
        /// </summary>
        public const string OpenInNewTabOrWindow = "OpenInNewTabOrWindow";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Parent Menu Item
        /// </summary>
        public const string ParentMenuItem = "ParentMenuItem";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Popout Image Url
        /// </summary>
        public const string PopoutImageUrl = "PopoutImageUrl";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Selectable
        /// </summary>
        public const string Selectable = "Selectable";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Text
        /// </summary>
        public const string Text = "Text";
        
        /// <summary>
        ///   Provides access to string resource key of value similar to: Tool Tip
        /// </summary>
        public const string ToolTip = "ToolTip";
    }
}
